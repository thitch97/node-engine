name: Update Working Dir from Github config repo

on:
  repository_dispatch:
    types: working-dir-update

jobs:
  update:
    runs-on: ubuntu-latest
    name: Update buildpack.toml
    steps:

    - name: parse inputs
      id: read-inputs
      run: |
        echo "received event"
        echo "::set-env name=commit::$(jq -r .client_payload.commit ${{ github.event_path }})"
        echo "::set-env name=srcpath::$(jq -r .client_payload.srcpath ${{ github.event_path }})"
        echo "::set-env name=destpath::$(jq -r .client_payload.destpath ${{ github.event_path }})"
        # echo "::set-output srcrepopath::$(jq -r '.client_payload.pathmap | keys[]' ${{ github.event_path }})"
        # echo "::set-output dstrepopath::$(jq -r '.client_payload.pathmap | keys[] as $k | (.[$k])' ${{ github.event_path }})"

    - run: |
        echo "commit: ${{ steps.read-inputs.outputs.commit }}"
        echo "srcpath: ${{ steps.read-inputs.outputs.srcpath }}"
        echo "dstpath: ${{ steps.read-inputs.outputs.dstpath }}"

    # - name: Parse ID and Version
    #   id: dependency
    #   run: |
    #     echo "::set-output name=id::$(jq -r .client_payload.dependency.id ${{ github.event_path }})"
    #     echo "::set-output name=version::$(jq -r .client_payload.dependency.version ${{ github.event_path }})"
    #
    # - name: Checkout
    #   uses: actions/checkout@v2
    #
    # - name: Checkout Branch
    #   run: |
    #     git checkout \
    #       -b "dependency-update/${{ steps.dependency.outputs.id }}/${{ steps.dependency.outputs.version }}"
    #
    # - name: Update buildpack.toml
    #   uses: paketo-buildpacks/github-config/actions/dependency/update@receive-dependency-update
    #
    # - name: Commit
    #   run: |
    #     git config --global user.email "paketobuildpacks@gmail.com"
    #     git config --global user.name "paketo-bot"
    #     git commit \
    #       --all \
    #       --message "Updating ${{ steps.dependency.outputs.id }} to ${{ steps.dependency.outputs.version }} in buildpack.toml"
    #
    # - name: Push Branch
    #   run: |
    #     git push \
    #       --set-upstream origin "dependency-update/${{ steps.dependency.outputs.id }}/${{ steps.dependency.outputs.version }}"
    #
    # - name: Open Pull Request
    #   run: |
    #     curl "https://api.github.com/repos/${{ github.repository}}/pulls" \
    #       -H "Authorization: token ${{ github.token }}" \
    #       -X POST \
    #       --data '{
    #         "head": "dependency-update/${{ steps.dependency.outputs.id }}/${{ steps.dependency.outputs.version }}",
    #         "base": "master",
    #         "title": "Update ${{ steps.dependency.outputs.id }}",
    #         "body": "Updates ${{ steps.dependency.outputs.id }} to ${{ steps.dependency.outputs.version }}"
    #       }'
    #
